|fpga_spi_top
clk_50mhz => clk_50mhz.IN2
reset_n => reset.IN2
uart_rx => uart_rx.IN1
uart_tx <= uart_controller:uart_inst.tx
spi_sclk <= spi_master:spi_inst.sclk
spi_mosi <= spi_master:spi_inst.mosi
spi_miso => spi_miso.IN1
spi_ss <= spi_master:spi_inst.ss


|fpga_spi_top|uart_controller:uart_inst
clk => tx_bit_count[0].CLK
clk => tx_bit_count[1].CLK
clk => tx_bit_count[2].CLK
clk => tx_bit_count[3].CLK
clk => tx_baud_count[0].CLK
clk => tx_baud_count[1].CLK
clk => tx_baud_count[2].CLK
clk => tx_baud_count[3].CLK
clk => tx_baud_count[4].CLK
clk => tx_baud_count[5].CLK
clk => tx_baud_count[6].CLK
clk => tx_baud_count[7].CLK
clk => tx_baud_count[8].CLK
clk => tx_shift[0].CLK
clk => tx_shift[1].CLK
clk => tx_shift[2].CLK
clk => tx_shift[3].CLK
clk => tx_shift[4].CLK
clk => tx_shift[5].CLK
clk => tx_shift[6].CLK
clk => tx_shift[7].CLK
clk => tx_reg.CLK
clk => tx_ready~reg0.CLK
clk => rx_shift[0].CLK
clk => rx_shift[1].CLK
clk => rx_shift[2].CLK
clk => rx_shift[3].CLK
clk => rx_shift[4].CLK
clk => rx_shift[5].CLK
clk => rx_shift[6].CLK
clk => rx_shift[7].CLK
clk => rx_bit_count[0].CLK
clk => rx_bit_count[1].CLK
clk => rx_bit_count[2].CLK
clk => rx_bit_count[3].CLK
clk => rx_data[0]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[7]~reg0.CLK
clk => rx_baud_count[0].CLK
clk => rx_baud_count[1].CLK
clk => rx_baud_count[2].CLK
clk => rx_baud_count[3].CLK
clk => rx_baud_count[4].CLK
clk => rx_baud_count[5].CLK
clk => rx_baud_count[6].CLK
clk => rx_baud_count[7].CLK
clk => rx_baud_count[8].CLK
clk => rx_valid~reg0.CLK
clk => tx_state~5.DATAIN
clk => rx_state~5.DATAIN
reset => tx_reg.PRESET
reset => tx_ready~reg0.PRESET
reset => rx_data[0]~reg0.ACLR
reset => rx_data[1]~reg0.ACLR
reset => rx_data[2]~reg0.ACLR
reset => rx_data[3]~reg0.ACLR
reset => rx_data[4]~reg0.ACLR
reset => rx_data[5]~reg0.ACLR
reset => rx_data[6]~reg0.ACLR
reset => rx_data[7]~reg0.ACLR
reset => rx_baud_count[0].ACLR
reset => rx_baud_count[1].ACLR
reset => rx_baud_count[2].ACLR
reset => rx_baud_count[3].ACLR
reset => rx_baud_count[4].ACLR
reset => rx_baud_count[5].ACLR
reset => rx_baud_count[6].ACLR
reset => rx_baud_count[7].ACLR
reset => rx_baud_count[8].ACLR
reset => rx_valid~reg0.ACLR
reset => tx_state~7.DATAIN
reset => rx_state~7.DATAIN
reset => rx_bit_count[3].ENA
reset => rx_bit_count[2].ENA
reset => rx_bit_count[1].ENA
reset => rx_bit_count[0].ENA
reset => rx_shift[7].ENA
reset => rx_shift[6].ENA
reset => rx_shift[5].ENA
reset => rx_shift[4].ENA
reset => rx_shift[3].ENA
reset => rx_shift[2].ENA
reset => rx_shift[1].ENA
reset => tx_bit_count[0].ENA
reset => rx_shift[0].ENA
reset => tx_shift[7].ENA
reset => tx_shift[6].ENA
reset => tx_shift[5].ENA
reset => tx_shift[4].ENA
reset => tx_shift[3].ENA
reset => tx_shift[2].ENA
reset => tx_shift[1].ENA
reset => tx_shift[0].ENA
reset => tx_baud_count[8].ENA
reset => tx_baud_count[7].ENA
reset => tx_baud_count[6].ENA
reset => tx_baud_count[5].ENA
reset => tx_baud_count[4].ENA
reset => tx_baud_count[3].ENA
reset => tx_baud_count[2].ENA
reset => tx_baud_count[1].ENA
reset => tx_baud_count[0].ENA
reset => tx_bit_count[3].ENA
reset => tx_bit_count[2].ENA
reset => tx_bit_count[1].ENA
rx => rx_shift.DATAB
rx => rx_shift.DATAB
rx => rx_shift.DATAB
rx => rx_shift.DATAB
rx => rx_shift.DATAB
rx => rx_shift.DATAB
rx => rx_shift.DATAB
rx => rx_shift.DATAB
rx => rx_state.OUTPUTSELECT
rx => rx_state.OUTPUTSELECT
rx => rx_state.OUTPUTSELECT
rx => rx_state.OUTPUTSELECT
rx => rx_baud_count.OUTPUTSELECT
rx => rx_baud_count.OUTPUTSELECT
rx => rx_baud_count.OUTPUTSELECT
rx => rx_baud_count.OUTPUTSELECT
rx => rx_baud_count.OUTPUTSELECT
rx => rx_baud_count.OUTPUTSELECT
rx => rx_baud_count.OUTPUTSELECT
rx => rx_baud_count.OUTPUTSELECT
rx => rx_baud_count.OUTPUTSELECT
tx <= tx_reg.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_valid <= rx_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_data[0] => tx_shift.DATAB
tx_data[1] => tx_shift.DATAB
tx_data[2] => tx_shift.DATAB
tx_data[3] => tx_shift.DATAB
tx_data[4] => tx_shift.DATAB
tx_data[5] => tx_shift.DATAB
tx_data[6] => tx_shift.DATAB
tx_data[7] => tx_shift.DATAB
tx_start => always1.IN1
tx_ready <= tx_ready~reg0.DB_MAX_OUTPUT_PORT_TYPE


|fpga_spi_top|spi_master:spi_inst
clk => rx_buffer[0].CLK
clk => rx_buffer[1].CLK
clk => rx_buffer[2].CLK
clk => rx_buffer[3].CLK
clk => rx_buffer[4].CLK
clk => rx_buffer[5].CLK
clk => rx_buffer[6].CLK
clk => rx_buffer[7].CLK
clk => tx_buffer[0].CLK
clk => tx_buffer[1].CLK
clk => tx_buffer[2].CLK
clk => tx_buffer[3].CLK
clk => tx_buffer[4].CLK
clk => tx_buffer[5].CLK
clk => tx_buffer[6].CLK
clk => tx_buffer[7].CLK
clk => rx_data[0]~reg0.CLK
clk => rx_data[1]~reg0.CLK
clk => rx_data[2]~reg0.CLK
clk => rx_data[3]~reg0.CLK
clk => rx_data[4]~reg0.CLK
clk => rx_data[5]~reg0.CLK
clk => rx_data[6]~reg0.CLK
clk => rx_data[7]~reg0.CLK
clk => clk_div_counter[0].CLK
clk => clk_div_counter[1].CLK
clk => clk_div_counter[2].CLK
clk => clk_div_counter[3].CLK
clk => clk_div_counter[4].CLK
clk => clk_div_counter[5].CLK
clk => clk_div_counter[6].CLK
clk => clk_div_counter[7].CLK
clk => clk_div_counter[8].CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => bit_count[3].CLK
clk => tx_done~reg0.CLK
clk => ss~reg0.CLK
clk => mosi~reg0.CLK
clk => sclk~reg0.CLK
clk => state~4.DATAIN
reset => rx_data[0]~reg0.ACLR
reset => rx_data[1]~reg0.ACLR
reset => rx_data[2]~reg0.ACLR
reset => rx_data[3]~reg0.ACLR
reset => rx_data[4]~reg0.ACLR
reset => rx_data[5]~reg0.ACLR
reset => rx_data[6]~reg0.ACLR
reset => rx_data[7]~reg0.ACLR
reset => clk_div_counter[0].ACLR
reset => clk_div_counter[1].ACLR
reset => clk_div_counter[2].ACLR
reset => clk_div_counter[3].ACLR
reset => clk_div_counter[4].ACLR
reset => clk_div_counter[5].ACLR
reset => clk_div_counter[6].ACLR
reset => clk_div_counter[7].ACLR
reset => clk_div_counter[8].ACLR
reset => bit_count[0].ACLR
reset => bit_count[1].ACLR
reset => bit_count[2].ACLR
reset => bit_count[3].ACLR
reset => tx_done~reg0.ACLR
reset => ss~reg0.PRESET
reset => mosi~reg0.ACLR
reset => sclk~reg0.ACLR
reset => state~6.DATAIN
reset => rx_buffer[0].ENA
reset => tx_buffer[7].ENA
reset => tx_buffer[6].ENA
reset => tx_buffer[5].ENA
reset => tx_buffer[4].ENA
reset => tx_buffer[3].ENA
reset => tx_buffer[2].ENA
reset => tx_buffer[1].ENA
reset => tx_buffer[0].ENA
reset => rx_buffer[7].ENA
reset => rx_buffer[6].ENA
reset => rx_buffer[5].ENA
reset => rx_buffer[4].ENA
reset => rx_buffer[3].ENA
reset => rx_buffer[2].ENA
reset => rx_buffer[1].ENA
tx_data[0] => tx_buffer.DATAB
tx_data[1] => tx_buffer.DATAB
tx_data[2] => tx_buffer.DATAB
tx_data[3] => tx_buffer.DATAB
tx_data[4] => tx_buffer.DATAB
tx_data[5] => tx_buffer.DATAB
tx_data[6] => tx_buffer.DATAB
tx_data[7] => tx_buffer.DATAB
start_tx => tx_buffer.OUTPUTSELECT
start_tx => tx_buffer.OUTPUTSELECT
start_tx => tx_buffer.OUTPUTSELECT
start_tx => tx_buffer.OUTPUTSELECT
start_tx => tx_buffer.OUTPUTSELECT
start_tx => tx_buffer.OUTPUTSELECT
start_tx => tx_buffer.OUTPUTSELECT
start_tx => tx_buffer.OUTPUTSELECT
start_tx => bit_count.OUTPUTSELECT
start_tx => bit_count.OUTPUTSELECT
start_tx => bit_count.OUTPUTSELECT
start_tx => bit_count.OUTPUTSELECT
start_tx => state.OUTPUTSELECT
start_tx => state.OUTPUTSELECT
start_tx => state.OUTPUTSELECT
start_tx => clk_div_counter.OUTPUTSELECT
start_tx => clk_div_counter.OUTPUTSELECT
start_tx => clk_div_counter.OUTPUTSELECT
start_tx => clk_div_counter.OUTPUTSELECT
start_tx => clk_div_counter.OUTPUTSELECT
start_tx => clk_div_counter.OUTPUTSELECT
start_tx => clk_div_counter.OUTPUTSELECT
start_tx => clk_div_counter.OUTPUTSELECT
start_tx => clk_div_counter.OUTPUTSELECT
start_tx => Selector0.IN1
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
tx_done <= tx_done~reg0.DB_MAX_OUTPUT_PORT_TYPE
sclk <= sclk~reg0.DB_MAX_OUTPUT_PORT_TYPE
mosi <= mosi~reg0.DB_MAX_OUTPUT_PORT_TYPE
miso => rx_buffer.DATAB
miso => rx_buffer.DATAB
miso => rx_buffer.DATAB
miso => rx_buffer.DATAB
miso => rx_buffer.DATAB
miso => rx_buffer.DATAB
miso => rx_buffer.DATAB
miso => rx_buffer.DATAB
ss <= ss~reg0.DB_MAX_OUTPUT_PORT_TYPE


