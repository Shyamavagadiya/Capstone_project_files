module uart_rx (
    input clk,
    input rst,
    input rx,              // UART serial input
    output reg [7:0] data_out,
    output reg rx_done
);

parameter CLK_FREQ = 50000000;
parameter BAUD_RATE = 9600;
localparam BAUD_CNT = CLK_FREQ / BAUD_RATE;

reg [15:0] baud_cnt;
reg [3:0] bit_index;
reg [7:0] rx_shift;
reg busy;

always @(posedge clk or posedge rst) begin
    if (rst) begin
        rx_done <= 0;
        busy <= 0;
        baud_cnt <= 0;
        bit_index <= 0;
    end else begin
        if (!busy && !rx) begin
            busy <= 1;
            baud_cnt <= BAUD_CNT/2; // middle of start bit
            bit_index <= 0;
        end else if (busy) begin
            if (baud_cnt < BAUD_CNT-1) begin
                baud_cnt <= baud_cnt + 1;
            end else begin
                baud_cnt <= 0;
                if (bit_index < 8) begin
                    rx_shift[bit_index] <= rx;
                    bit_index <= bit_index + 1;
                end else begin
                    data_out <= rx_shift;
                    rx_done <= 1;
                    busy <= 0;
                end
            end
        end else begin
            rx_done <= 0;
        end
    end
end

endmodule
